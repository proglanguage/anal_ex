TwoDimensionalMatrix : struct {
  int number_of_lines
  int number_of_columns
  int[][] values
}

TwoDimensionalMatrix function read_matrix()
  TwoDimensionalMatrix matrix
  matrix.values = []

  puts("What is the number of lines?")
  matrix.number_of_lines = (int) gets()
  puts("What is the number of columns?")
  matrix.number_of_columns = (int) gets()

  for(int line = 0, line < matrix.number_of_lines, line++)
    for(int column = 0, column < matrix.number_of_columns, column++)
      puts("Value for line %d column %d:", i, j)
      matrix.values[line][column] = (int) gets()
    end_for
  end_for

  return matrix
end_function

procedure print_matrix(TwoDimensionalMatrix matrix)
  for line in matrix.values
    for value in line
      puts("%d", value)
    end_for
  end_for
end_procedure

procedure print_sum(TwoDimensionalMatrix m1, TwoDimensionalMatrix m2)
  if m1.number_of_lines() != m2.number_of_lines() or m1.number_of_columns != m2.number_of_columns then
    puts("Cannot calculate sum because sizes are different.")
    return
  end_if

  TwoDimensionalMatrix matrix
  matrix.number_of_lines = m1.number_of_lines
  matrix.number_of_columns = m1.number_of_columns

  for(int line = 0, line < matrix.number_of_lines, line++)
    for(int column = 0, column < matrix.number_of_columns, column++)
      matrix.values[line][column] = m1[line][column] + m2[line][column]
    end_for
  end_for

  print_matrix(matrix)
end_procedure

procedure print_product(TwoDimensionalMatrix m1, TwoDimensionalMatrix m2)
  int sum = 0

  if m1.number_of_lines() != m2.number_of_columns() then
    puts("Cannot calculate product because sizes are different.")
    return
  end_if

  TwoDimensionalMatrix matrix
  matrix.number_of_lines = m1.number_of_lines
  matrix.number_of_columns = m2.number_of_columns

  for(int x = 0, x < matrix.number_of_lines, x++)
    for(int y = 0, y < matrix.number_of_columns, y++)
      for(int z = 0, z < m2.number_of_lines, z++)
        sum = sum + m1[x][z] * m2[z][y]
      end_for

      matrix.values[x][y] = sum

      sum = 0
    end_for
  end_for

  print_matrix(matrix)
end_procedure

puts("Please enter the first matrix:")

int[][] first_matrix = read_matrix()
int[][] second_matrix = read_matrix()

print_sum(first_matrix, second_matrix)
print_product(first_matrix, second_matrix)
